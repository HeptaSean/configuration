# If not running interactively, don't do anything:
# ================================================
[[ $- != *i* ]] && return

# Various bash-specific settings:
# ===============================
shopt -s checkwinsize
shopt -s histappend
unset HISTFILE

# Standard programs:
# ==================
export EDITOR="vim"
export PAGER="less"

# Settings for specific programs:
# ===============================
alias ls="ls --classify --color=always"
export LS_COLORS="rs=0:di=34:st=34:ow=34:tw=34:ln=36:or=30;46:mi=30;41:ex=32:su=31:sg=31:ca=32:pi=33:so=33:do=33:bd=33:cd=33"
# rs – reset
# di – directory: dark blue
# st – sticky: dark blue
# ow – other writable: dark blue
# tw – sticky other writable: dark blue
# ln – symbolic link: dark cyan
# or – orphan link: reverse dark cyan
# mi – missing: reverse dark red
# ex - executable: dark green
# su – setuid: dark red
# sg – setgid: dark red
# ca - dark green
# pi – pipe: reverse dark yellow
# so – socket: reverse dark yellow
# do – door: reverse dark yellow
# bd – block device: reverse dark yellow
# cd – character device: reverse dark yellow

export TIME_STYLE="long-iso"

alias grep="grep --color=always"
export GREP_COLORS="mt=07;33:fn=35:ln=36:bn=36:se=34"
# mt – matching text: reverse dark yellow
# fn – file name: dark magenta
# ln – line number: dark cyan
# bn – byte number: dark cyan
# se – separators: dark blue

alias diff="diff --color=always"

alias dmesg="dmesg --human --color=always"

export LESS="--RAW-CONTROL-CHARS --LONG-PROMPT"
export LESSHISTFILE="-"
export LESS_TERMCAP_mb=$'\E[31m'      # blink start: dark red
export LESS_TERMCAP_md=$'\E[36m'      # bold start: dark cyan
export LESS_TERMCAP_me=$'\E[0m'       # blink, bold, underline end
export LESS_TERMCAP_us=$'\E[34m'      # underline start: dark blue
export LESS_TERMCAP_ue=$'\E[0m'       # underline end
export LESS_TERMCAP_so=$'\E[7;33m'    # standout start: reverse dark yellow
export LESS_TERMCAP_se=$'\E[0m'       # standout end

export MANPAGER="less --squeeze-blank-lines --LONG-PROMPT +Gg"

alias glances="glances --disable-bg"

# Prompt:
# =======
# Colours for prompt:
red='\[\e[1;31m\]'      # light red
green='\[\e[1;32m\]'    # light green
yellow='\[\e[1;33m\]'   # light yellow
blue='\[\e[1;34m\]'     # light blue
magenta='\[\e[1;35m\]'  # light magenta
cyan='\[\e[1;36m\]'     # light cyan
white='\[\e[1;37m\]'    # light grey
reset='\[\e[0m\]'
# Function for virtual environment:
ps1_venv() {
    if [ -n "$VIRTUAL_ENV" ]
    then
        local venv="${VIRTUAL_ENV##*/}"
        if [ "$venv" = "venv" ]
        then
            local path="${VIRTUAL_ENV%/*}"
            venv="${path##*/}/$venv"
        fi
        echo -e "-[\001\e[1;34m\002v:$venv\001\e[1;37m\002]"  # light blue
    fi
}
export VIRTUAL_ENV_DISABLE_PROMPT=1
# Prompt command for shortened workdir:
PROMPT_COMMAND='ps1_path=$(sed "s:\([^/\.]\)[^/]*/:\1/:g" <<< ${PWD/#$HOME/\~})'
# Function for fossil checkout state:
if [ -x "$(command -v fossil)" ]
then
    ps1_fossil() {
        local branch=$(fossil branch 2> /dev/null | sed -n 's/* \(.*\)/\1/p')
        if [ -n "$branch" ]
        then
            local color="1;32m"  # light green
            if [ -n "$(fossil extras)" ]
            then
                color="1;33m"    # light yellow
            fi
            if [ -n "$(fossil changes)" ]
            then
                color="1;31m"    # light red
            fi
            echo -e "-[\001\e[$color\002f:$branch\001\e[1;37m\002]"
        fi
    }
else
    ps1_fossil() {
        return
    }
fi
# Function for git checkout state:
if [ -x "$(command -v git)" ]
then
    ps1_git() {
        local branch=$(git branch 2> /dev/null | sed -n 's/* \(.*\)/\1/p')
        if [ -n "$branch" ]
        then
            local color="1;32m"  # light green
            local changes=$(git status --porcelain)
            if [ -n "$changes" ]
            then
                color="1;33m"    # light yellow
            fi
            if [ -n "$(grep -v '^??' <<< $changes)" ]
            then
                color="1;31m"    # light red
            fi
            echo -e "-[\001\e[$color\002g:$branch\001\e[1;37m\002]"
        fi
    }
else
    ps1_git() {
        return
    }
fi
# And finally the whole prompt:
PS1="$white[\$(ec=\$?; [[ \$ec != 0 ]] && echo \"$red\$ec\" || echo \"$green\$ec\")$white]-[$yellow\t$white]-[$cyan\u@\h$white]\$(ps1_venv)-[$magenta\$ps1_path$white]\$(ps1_fossil)\$(ps1_git)\n$white\\\$ $reset"

# If .bash_local exists, source it:
# =================================
if [ -f ~/.bash_local ]
then
    source ~/.bash_local
fi

# Unset the colours:
# ==================
unset red green yellow blue magenta cyan white reset
